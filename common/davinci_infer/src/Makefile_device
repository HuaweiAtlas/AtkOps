#include ./src/path.mk
all : libai_engine.so
#DEVICE COMPILER		
DDK_HOME = $(DDK_PATH)
CC := $(DDK_HOME)/toolchains/aarch64-linux-gcc6.3/bin/aarch64-linux-gnu-g++
#注意每行后面不要有空格，否则会算到目录名里面，导致问题
LOCAL_DIR  := ./src

SRC_DIR = $(LOCAL_DIR)
BUILD_DIR = tmp
OUT_DIR = ../out
OBJ_DIR = $(BUILD_DIR)/obj
DEPS_DIR  = $(BUILD_DIR)/deps

#这里添加其他头文件路径
INC_DIR = \
	-I$(SRC_DIR) \
	-I$(DDK_HOME)/include/inc \
	-I$(DDK_HOME)/include/third_party/protobuf/include \
	-I$(DDK_HOME)/include/third_party/cereal/include \
	-I$(DDK_HOME)/include/libc_sec/include \
	-I../common/include \
	-I/usr/include/python2.7

#这里添加编译参数
CC_FLAGS := $(INC_DIR) -O3 -std=c++11 -fPIC -DCPU_ONLY -g -fstack-protector-all -Wl,-z,relro,-z,now -Wl,-z,noexecstack
LNK_FLAGS := \
    -L$(DDK_HOME)/device/lib \
    -shared


local_shared_libs_dirs := \
    $(DDK_HOME)/device/lib

SHARED_LIBRARIES_DIRS := $(foreach shared_lib_dir, $(local_shared_libs_dirs), -L$(shared_lib_dir) -Wl,-rpath-link,$(shared_lib_dir))

#这里递归遍历3级子目录
DIRS := $(shell find $(SRC_DIR)/device -maxdepth 3 -type d)
CUSTOM_DIRS := $(shell find $(SRC_DIR)/device -maxdepth 3 -type d)

#将每个子目录添加到搜索路径
VPATH = $(DIRS)

#查找src_dir下面包含子目录的所有cpp文件
SOURCES  = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.cpp))
CUSTOM_SOURCES  = $(foreach dir, $(CUSTOM_DIRS), $(wildcard $(dir)/*.cpp))
OBJS   = $(addprefix $(OBJ_DIR)/,$(patsubst %.cpp,%.o,$(notdir $(SOURCES))))
OBJS_customop = $(addprefix $(OBJ_DIR)/,$(patsubst %.cpp,%.o,$(notdir $(CUSTOM_SOURCES))))
OBJS_no_customop := $(filter-out $(OBJS_customop), $(OBJS))
DEPS  = $(addprefix $(DEPS_DIR)/, $(patsubst %.cpp,%.d,$(notdir $(SOURCES))))

# 编译源码链接成目标so
LDDIR+= -L$(DDK_HOME)/lib/aarch64-linux-gcc6.3

libai_engine.so: $(OBJS_customop)
	$(CC) $(LDDIR) $^ $(LNK_FLAGS) -o $@
	rm -rf $(BUILD_DIR)

#编译之前要创建OBJ目录，确保目录存在
$(OBJ_DIR)/%.o:%.cpp
	@if [ ! -d $(OBJ_DIR) ]; then mkdir -p $(OBJ_DIR); fi;
	$(CC) -c $(CC_FLAGS) -o $@ $<


#编译之前要创建DEPS目录，确保目录存在
#前面加@表示隐藏命令的执行打印
$(DEPS_DIR)/%.d:%.cpp
	@if [ ! -d $(DEPS_DIR) ]; then mkdir -p $(DEPS_DIR); fi;
	set -e; rm -f $@;
	$(CC) -MM $(CC_FLAGS) $< > $@.$$$$;
	sed 's,\($*\)\.o[ :]*,$(OBJ_DIR)/\1.o $@ : ,g' < $@.$$$$ > $@;
	rm -f $@.$$$$

#前面加-表示忽略错误
ifneq ($(MAKECMDGOALS), clean)
	-include $(DEPS)
endif

.PHONY : clean install
clean:
	rm -rf $(BUILD_DIR) lib*.so *.o
install: libai_engine.so
	mv *.so $(OUT_DIR)
